<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!--1 自动扫描 将标注Spring注解的类自动转化Bean -->
	<context:component-scan base-package="com.schoolms" />
	<!-- <context:component-scan base-package="com.sys" /> -->
	<!--2 加载数据资源属性文件 -->
	<!-- 加载配置文件 -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties" 
		/> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!-- 数据源，使用dbcp ：com.alibaba.druid.pool.DruidDataSource-->
	<!-- 3 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>
	<!-- 配置MultipartResolver,用于上传文件，使用spring的CommonsMultipartResolver -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="maxInMemorySize" value="4096"></property> <property name="maxUploadSize" 
		value="5000000"></property> <property name="defaultEncoding" value="UTF-8"></property> 
		</bean> -->

	<!-- sqlSessinFactory在mybatis单独使用的时候 咱们封装了一个工具类来获取该单例，但是和spring整合之后 完全交给spring的ioc容器来实例化该对象org.mybatis.spring.SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:com/schoolms/dao/*.xml"></property>
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>

		<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->

		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql" />
				</bean>
				<bean id="performanceInterceptor"
					class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor">
					<!-- 超过自动停止运行，有助于发现问题。 -->
					<property name="maxTime" value="5000" />
					<!--SQL是否格式化 默认false -->
					<property name="format" value="true" />
				</bean>
			</array>
		</property>
		
		<property name="globalConfig" ref="globalConfiguration"></property>
		
	</bean>

	<!-- spring和mybatis整合的jar包,提供了 自动生成mapper代理对象的机制， 只需要配置mapper接口的包路径 和sqlsessionfactory -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.schoolms.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	
	
	
	<bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!--注入公共字段填充处理器 -->
		<!-- <property name="metaObjectHandler" ref="metaHandler"></property> -->
	</bean>
	<!--自定义公共字段填充处理器 -->
	<!-- <bean id="metaHandler" class="com.schoolms.utils.MyMetaObjectHandler" ></bean> -->



	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 通知：增强 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> 传播行为 <tx:method name="save*" propagation="REQUIRED" /> <tx:method 
		name="insert*" propagation="REQUIRED" /> <tx:method name="add*" propagation="REQUIRED" 
		/> <tx:method name="delete*" propagation="REQUIRED" /> <tx:method name="update*" 
		propagation="REQUIRED" /> <tx:method name="find*" propagation="SUPPORTS" 
		read-only="true" /> <tx:method name="get*" propagation="SUPPORTS" read-only="true" 
		/> </tx:attributes> </tx:advice> -->
	<!-- 切面 -->
	<!-- 7、注解事务切面 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>